openapi: 3.0.0
info:
  title: Developers Italia API
  version: 1.0.0
  x-summary: Developers Italia API
  description: The API of Developers Italia
  license:
    name: Apache
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
  contact:
    email: contatti@developers.italia.it
    url: 'https://developers.italia.it/en/contacts'
    name: Developers Italia
  x-api-id: 0f9ca6b0-db47-11ec-96f7-d8bbc146d165
  # TODO: Create that page
  termsOfService: https://developers.italia.it/en/api
servers:
  - url: 'https://api.developers.italia.it'
    description: The production server
tags:
  - name: software
    description: Operations on software
  - name: bundles
    description: Operations on bundles
  - name: logs
    description: Operations on logs
  - name: publishers
    description: Operations on publishers
  - name: monitor
    description: Monitoring operations on the API
paths:
  /status:
    get:
      summary: Get the API status
      description: Get the API status
      tags: [monitor]
      operationId: get-status
      responses:
        '204':
          $ref: "#/components/responses/NoContent"
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /software:
    get:
      summary: List all software
      description: This endpoint allows you to list all software
      tags:
        - software
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Software'
                  meta:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: get-software
      parameters:
        - schema:
            type: integer
            format: int32
            example: 100
            minimum: 1
          in: query
          name: limit
          description: Limit the amount of results
        - schema:
            type: integer
            format: int32
            example: 3
            minimum: 1
          in: query
          name: page
          description: Page number for use in pagination
    post:
      summary: Create a new Software
      description: Create a new Software
      tags:
        - software
      operationId: post-software
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Software'
            examples: {}
  '/software/{softwareId}':
    parameters:
      - schema:
          type: string
        name: softwareId
        in: path
        required: true
    get:
      summary: Get a Software
      description: Get a Software from its id
      tags:
        - software
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: get-software-softwareId
    patch:
      summary: Update a Software
      description: Update a Software by its id
      tags:
        - software
      operationId: patch-software-softwareId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Software'
    delete:
      summary: Delete a Software
      description: Delete a Sofware by its id
      tags:
        - software
      operationId: delete-software-softwareId
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/software/{softwareId}/logs':
    parameters:
      - schema:
          type: string
        name: softwareId
        in: path
        required: true
    get:
      summary: List all Logs for a Software
      description: List all Logs for a Software by its id
      tags:
        - logs
      operationId: get-software-softwareId-logs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Log'
                  meta:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      parameters:
        - schema:
            type: integer
            format: int32
            example: 100
            minimum: 1
          in: query
          name: limit
          description: Limit the amount of results
        - schema:
            type: integer
            format: int32
            example: 3
            minimum: 1
          in: query
          name: page
          description: Page number for use in pagination
        - schema:
            type: string
            format: date-time
            example: '2022-06-07T09:56:23Z'
          in: query
          name: from
          description: Only logs after this time (ISO 8601 datetime)
        - schema:
            type: string
            format: date-time
            example: '2022-06-07T14:56:23Z'
          in: query
          name: to
          description: Only logs before this time (ISO 8601 datetime)
    post:
      summary: Create Logs for a Software
      description: Create Logs for a Software by its id
      tags:
        - logs
      operationId: post-software-softwareId-logs
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Log'
            examples:
              example-1:
                value:
                  - id: string
  /bundles:
    get:
      summary: List all Bundles
      description: List all Bundles
      tags:
        - bundles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bundle'
                  meta:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: get-bundles
    post:
      summary: Create a Bundle
      description: Create a Bundle
      tags:
        - bundles
      operationId: post-bundles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bundle'
            examples: {}
  '/bundle/{bundleId}':
    parameters:
      - schema:
          type: string
        name: bundleId
        in: path
        required: true
    get:
      summary: Get a Bundle
      description: Get a Bundle by its id
      tags:
        - bundles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: get-bundle-bundleId
    patch:
      summary: Update a Bundle
      description: Update a Bundle by its id
      tags:
        - bundles
      operationId: patch-bundle-bundleId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Bundle'
    delete:
      summary: Delete a Bundle
      description: Delete a Bundle by its id
      tags:
        - bundles
      operationId: delete-bundle-bundleId
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /logs:
    get:
      summary: List all Logs
      description: List all Logs
      tags:
        - logs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Log'
                  meta:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: get-logs
      parameters:
        - schema:
            type: integer
            format: int32
            example: 100
            minimum: 1
          in: query
          name: limit
          description: Limit the amount of results
        - schema:
            type: integer
            format: int32
            example: 3
            minimum: 1
          in: query
          name: page
          description: Page number for use in pagination
        - schema:
            type: string
            format: date-time
            example: '2022-06-07T09:56:23Z'
          in: query
          name: from
          description: Only logs after this time (ISO 8601 datetime)
        - schema:
            type: string
            format: date-time
            example: '2022-06-07T14:56:23Z'
          in: query
          name: to
          description: Only logs before this time (ISO 8601 datetime)
    post:
      summary: Create Logs
      description: Create Logs
      tags:
        - logs
      operationId: post-logs
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Log'
  /publishers:
    get:
      summary: List all Publishers
      description: List all Publishers
      tags:
        - publishers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Publisher'
                  meta:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: get-publishers
    post:
      summary: Create a new Publisher
      description: Create a new Publisher
      tags:
        - publishers
      operationId: post-publishers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/publishers/{publisherId}':
    parameters:
      - schema:
          type: string
        name: publisherId
        in: path
        required: true
    get:
      summary: Get a Publisher
      description: Get a Publisher by its id
      tags:
        - publishers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: get-publishers-publisherId
    patch:
      summary: Update a Publisher
      description: Update a Publisher by its id
      tags:
        - publishers
      operationId: patch-publishers-publisherId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Publisher'
    delete:
      summary: Delete a Publisher
      description: Delete a Publisher by its id
      tags:
        - publishers
      operationId: delete-publishers-publisherId
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  responses:
    NoContent:
      description: No Content
    BadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
    NotFound:
      description: Not found
      content:
        application/problem+json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
    TooManyRequests:
      description: Too Many Requests
      content:
        application/problem+json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/Error'
  schemas:
    Software:
      title: Software
      x-stoplight:
        id: g73zfvx7rmc20
      type: object
      properties:
        id:
          type: string
        publiccode:
          type: string
    Publisher:
      title: Publisher
      x-stoplight:
        id: o9ohv7d53cd5o
      type: object
      properties:
        id:
          type: string
    Log:
      title: Log
      x-stoplight:
        id: 17yfpqsmi2dy1
      type: object
      properties:
        id:
          type: string
    Bundle:
      title: Bundle
      x-stoplight:
        id: vjkub0yybmkka
      type: object
      properties:
        id:
          type: string
    Pagination:
      type: object
      x-examples:
        example-1:
          pagination:
            per_page: 200
            current_page: 3
      properties:
        pagination:
          type: object
          properties:
            per_page:
              type: integer
              format: int32
            current_page:
              type: integer
              format: int32
    Error:
      type: object
      x-examples:
        example-1:
          code: x
          title: x
          detail: x
      properties:
        code:
          type: string
          description: Application-specific error code
        title:
          type: string
          description: 'Short, human-readable summary of the problem'
        detail:
          type: string
          description: Human-readable explanation of the problem
      required:
        - title
        - detail
  securitySchemes:
    API Key - 1:
      name: API Key
      type: apiKey
      in: header
      description: ''
